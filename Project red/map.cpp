#include "map.h"
#include "texture.hpp"

int lv1[20][25] = {
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2},
	{2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2},
	{2,2,3,3,3,2,2,2,2,2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};


map::map()
{
	sky = texture_M::LoadTexture("assets/sky.PNG");
	cloud = texture_M::LoadTexture("assets/cloud.PNG");
	co = texture_M::LoadTexture("assets/co.PNG");
	khong = texture_M::LoadTexture("assets/khong.PNG");

	loadmap(lv1);

	src.y = src.y = 0;
	src.w = dest.w = 600;
	src.h = dest.h = 600;

	dest.x = dest.y = 0;
}

void map::loadmap(int a[20][25]) {
	for (int r = 0; r < 20; r++) { // hang
		for (int c =0; c < 25; c++) // cot
		{ 
			m[r][c] = a[r][c];
		}
	}

}

void map::drawmap(){

	int type = 0;

	for (int r = 0; r < 20; r++) { // hang
		for (int c = 0; c < 25; c++) // cot
		{
			type = m[r][c];
			dest.x = c * 32;
			dest.y = r * 32;

			switch (type)
			{
			case 0:
				texture_M::ve(khong, src, dest);
				break;
			case 1:
				texture_M::ve(co, src, dest);
				break;
			case 2:
				texture_M::ve(sky, src, dest);
				break;
			case 3:
				texture_M::ve(cloud, src, dest);
				break;
			default:
				break;
				
			};
		}
	}

}